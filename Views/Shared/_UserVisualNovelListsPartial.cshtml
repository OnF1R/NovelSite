@using NovelSite.Models.Novel;
@model NovelSite.Models.Prolife.UserProfileViewModel;
<div>
@*     <ul class="nav nav-tabs" id="myTab" role="tablist">
        @foreach (VisualNovelList list in Model.VisualNovelLists)
        {
            <li class="nav-item" role="presentation">
                @if (Model.VisualNovelLists.IndexOf(list) == 0)
                {
                    <button name="@list.Id" onload="loadVisualNovelsInList('@Model.Id', @list.Id)" onclick="loadVisualNovelsInList('@Model.Id', @list.Id)" class="nav-link active" id="tab-@list.Id" data-bs-toggle="tab" data-bs-target="#tab-pane-@list.Id" type="button" role="tab" aria-controls="tab-pane-@list.Id" aria-selected="true">@list.Name</button>
                }
                else
                {
                    <button name="@list.Id" onclick="loadVisualNovelsInList('@Model.Id', @list.Id)" class="nav-link" id="tab-@list.Id" data-bs-toggle="tab" data-bs-target="#tab-pane-@list.Id" type="button" role="tab" aria-controls="tab-pane-@list.Id" aria-selected="false">@list.Name</button>
                }
            </li>
        }
    </ul> *@

    <select id="list-select" class="vn-select mb-2 form-select">
        <option value="0" selected>Все</option>
        @foreach (VisualNovelList list in Model.VisualNovelLists)
        {
            <option value="@list.Id">@list.Name</option>
        }
    </select>
    <div class="d-flex justify-content-center mb-2" id="liveAlertPlaceholder"></div>
    <div id="novel-lists-container">
        @await Html.PartialAsync("_UserVisualNovelsInListPartial", Model.VisualNovelListEntries)
    </div>
@* 
    <div class="tab-content" id="myTabContent">
        @foreach (VisualNovelList list in Model.VisualNovelLists)
        {
            @if (Model.VisualNovelLists.IndexOf(list) == 0)
            {
                <div class="tab-pane fade show active" id="tab-pane-@list.Id" role="tabpanel" aria-labelledby="tab-@list.Id" tabindex="0">

                    <div class="@list.Id-visualNovels">
                    </div>
                </div>
            }
            else
            {
                <div class="tab-pane fade" id="tab-pane-@list.Id" role="tabpanel" aria-labelledby="tab-@list.Id" tabindex="0">

                    <div class="@list.Id-visualNovels">
                    </div>
                </div>
            }
        }
    </div> *@
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {

        var listContainer = document.getElementById("novel-lists-container");

        document.getElementById('list-select').addEventListener("change", function (e) {
            if (e.target.selectedOptions[0].value == 0) {
                listContainer.innerHTML = `@await Html.PartialAsync("_UserVisualNovelsInListPartial", Model.VisualNovelListEntries)`;
            } else {
                loadVisualNovelsInList('@Model.Id', e.target.selectedOptions[0].value);
            }
        });
    });

    function loadVisualNovelsInList(userId, listId) {
        var url = "/Profile/List/?userId=" + userId + "&listId=" + listId;
        var alert = document.getElementById("liveAlertPlaceholder");

        alert.innerHTML = `<div class="spinner-border my-2" role = "status"><span class="visually-hidden">Loading...</span></div>`


        var xhr = new XMLHttpRequest();
        xhr.open("GET", url, true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                    document.getElementById("novel-lists-container").innerHTML = xhr.responseText;
                    alert.innerHTML = '';
                } else {
                    alert.innerHTML = '';
                }
            }
        };
        xhr.send();
    }
</script>