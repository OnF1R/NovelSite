@using System;
@using System.Text;
@using Microsoft.AspNetCore.Identity;
@using NovelSite.Data.Identity;
@using NovelSite.Services.Queries;
@using NovelSite.Models.Novel;

@inject SignInManager<ApplicationIdentityUser> SignInManager;
@inject UserManager<ApplicationIdentityUser> UserManager;


@{
    VisualNovel vn = ViewBag.Vn;
    ViewData["Title"] = vn.Title;
    string fancyappsScript = "https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.umd.js";
    string fancyappsCss = "https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.css";
    string fancyCarouselScript = "https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/carousel/carousel.umd.js";
    string fancyCarouselCss = "https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/carousel/carousel.css";
    string fancyCarouselThumbsCss = "https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/carousel/carousel.thumbs.css";
    string fancyCarouselThumbsScript = "https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/carousel/carousel.thumbs.umd.js";

    <script src="@fancyCarouselThumbsScript"></script>
    <script src= "@fancyCarouselScript"></script >

    string s3Url = $"https://2f58d602-2c33-481e-875b-700b4d4b3263.selstorage.ru/";
    string backgroundImageUrl = @s3Url + vn.BackgroundImageLink;
    bool isHaveRating = false;
    ApplicationIdentityUser currentUser = null;

    if (SignInManager.IsSignedIn(User))
    {
        currentUser = await UserManager.GetUserAsync(User);
    }
    StringBuilder metaKeywords = new StringBuilder($"Визуальная новелла, {vn.Title}");
    StringBuilder metaDescription = new StringBuilder();

    if (vn.DownloadLinks != null)
    {
        metaDescription.Append($"На этой странице можно скачать визуальную новеллу {vn.Title}");
        metaKeywords.Append(",Cкачать");
    }
    else
    {
        metaDescription.Append($"На этой странице предоставлена информация о визуальной новелле {vn.Title}");
    }

    if (vn.AnotherTitles != null)
    {
        metaDescription.Append($" или другие названия {string.Join(',', vn.AnotherTitles)},");
        metaKeywords.Append($",{string.Join(',', vn.AnotherTitles)}");
    }



    

    if (vn.Genres != null)
    {
        metaDescription.Append($" в жанре {string.Join(',', vn.Genres.Select(g => g.Name))}.");
        metaKeywords.Append($",{string.Join(',', vn.Genres.Select(g => g.Name))}");
    }

    ViewData["MetaDescription"] = metaDescription;
    ViewData["MetaKeywords"] = metaKeywords;

    // Open Graph tags
    ViewData["OgTitle"] = vn.Title;
    ViewData["OgDescription"] = metaDescription;
    ViewData["OgImage"] = $"https://2f58d602-2c33-481e-875b-700b4d4b3263.selstorage.ru/{vn.CoverImageLink}";
    ViewData["OgUrl"] = Globals.GetFullUrl(Context);
}
<link rel="stylesheet" href="@fancyCarouselThumbsCss" />
<link rel="stylesheet" href="@fancyCarouselCss" />
<link href="@fancyappsCss" rel="stylesheet">

@if (vn.BackgroundImageLink != null)
{
    <img class="bg-top" src="@backgroundImageUrl" />
}

<div class="text-center">
    <div class="vn-page p-2">
        <div class="row pb-4">
            <div class="col-lg-4 col-xl-4 col-xxl-4 col-md-4 col-sm-12">
                @if (vn.CoverImageLink != null)
                {
                    string coverImageUrl = @s3Url + vn.CoverImageLink;
                    <div class="position-relative">

                        <img loading="lazy" style="border-radius: 8px;" src="@coverImageUrl" class="w-100" />
                        @if (vn.VndbId != null)
                        {
                            <a href="https://vndb.org/@vn.VndbId"><img loading="lazy" src="~/images/vndbIcon.png" class="position-absolute bottom-0 end-0 translate-middle" /></a>
                        }
                    </div>
                }
                else
                {
                    <img src="images/thumbnail.png" class="w-100">
                }
                @if (currentUser != null)
                {
                    <div class="mt-3">
                        
                        @if (currentUser.Id == vn.AdddeUserId.ToString())
                        {
                            <a class="btn btn-primary" asp-controller="Novel" asp-action="Edit" asp-route-linkName="@vn.LinkName">Редактировать</a>
                            <a class="btn btn-primary" asp-controller="Novel" asp-action="EditImage" asp-route-linkName="@vn.LinkName">Изменить изображение</a>
                        }

                        @{
                            List<VisualNovelList> userLists = await HttpQueries.GetVisualNovelLists(currentUser.Id, true);
                            List<VisualNovelListEntry> userListEntry = await HttpQueries.GetVisualNovelInAnyUserList(currentUser.Id, vn.Id);
                        }

                        @* <div class="mt-3">
                            <span><b>Мои списки:</b></span>
                            <select id="UserVisualNovelLists" name="UserVisualNovelLists" class="form-select js-example-basic-multiple user-visual-novel-lists-selector" multiple required aria-label="Visual novel author select">
                                @foreach (var list in userLists)
                                {
                                    if (userListEntry.Any(entry => entry.VisualNovelList.Id == list.Id))
                                    {
                                        <option selected value="@list.Id">@list.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@list.Id">@list.Name</option>
                                    }
                                }
                            </select>
                        </div> *@



                        <div class="mt-3">
                            <div class="custom-select-container" id="custom-select-container">
                                <div class="custom-select-wrapper" id="custom-select-wrapper">
                                    Добавить в список
                                </div>
                                <div class="custom-select-options" id="custom-select-options">
                                    @foreach (var list in userLists)
                                    {
                                        if (userListEntry.Any(entry => entry.VisualNovelList.Id == list.Id))
                                        {
                                            <label>
                                                <input type="checkbox" value="@list.Id" checked data-mutually-exclusive="@(@list.ListType == null ? "" : @list.ListType.IsMutuallyExclusive.ToString().ToLower())"> @list.Name
                                            </label>
                                        }
                                        else
                                        {
                                            <label>
                                                <input type="checkbox" value="@list.Id" data-mutually-exclusive="@(list.ListType == null ? "" : @list.ListType.IsMutuallyExclusive.ToString().ToLower())"> @list.Name
                                            </label>
                                        } 
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="row g-3 mt-3">
                            <div class="col-8">
                                <input type="text" id="new-option-input" class="form-control" placeholder="Название нового списка">
                            </div>
                            <div class="col-4">
                                <button id="add-option-btn" class="btn btn-primary">Добавить</button>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <p class="mt-2">Чтобы оценить визуальную новеллу или добавить её в список, необходимо <a asp-area="Identity" asp-page="/Account/Login">авторизоваться</a></p>
                }

                <div class="mt-3">
                    <svg class="me-2" width="32px" height="32px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">

                        <g stroke-width="0" />

                        <g stroke-linecap="round" stroke-linejoin="round" />

                        <g> <path d="M9 4.45962C9.91153 4.16968 10.9104 4 12 4C16.1819 4 19.028 6.49956 20.7251 8.70433C21.575 9.80853 22 10.3606 22 12C22 13.6394 21.575 14.1915 20.7251 15.2957C19.028 17.5004 16.1819 20 12 20C7.81811 20 4.97196 17.5004 3.27489 15.2957C2.42496 14.1915 2 13.6394 2 12C2 10.3606 2.42496 9.80853 3.27489 8.70433C3.75612 8.07914 4.32973 7.43025 5 6.82137" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" /> <path d="M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z" stroke="#ffffff" stroke-width="1.5" /> </g>
                    </svg>
                    <span>@vn.PageViewesCount</span>
                </div>

            </div>
            <div class="col-xxl-8 col-xl-8 col-lg-8 col-md-8 col-sm-12" style="text-align: left;">
                @if (currentUser != null)
                {
                    int userRating = await HttpQueries.GetVisualNovelUserRating(currentUser.Id, vn.Id);
                    <div class="rating-area">
                        @for (int i = 10; i > 0; i--)
                        {
                            if (userRating == i)
                            {
                                <input type="radio" id="star-@i" name="rating" value="@i" checked>
                                <label for="star-@i" title="Оценка «@i»"></label>
                            }
                            else
                            {
                                <input type="radio" id="star-@i" name="rating" value="@i">
                                <label for="star-@i" title="Оценка «@i»"></label>
                            }
                        }
                    </div>
                    @if (userRating > 0)
                    {
                        isHaveRating = true;
                        <button id="delete-rating-button" class="btn btn-secondary">Удалить рейтинг</button>
                    }
                    else
                    {
                        isHaveRating = false;
                        <button id="delete-rating-button" class="btn d-none btn-secondary">Удалить рейтинг</button>
                    }
                }
                <h1>@vn.Title</h1>
                @if (vn.AnotherTitles != null)
                {
                    <ul style="list-style: none; padding: 0px;">
                        @foreach (string title in vn.AnotherTitles)
                        {
                            <li>@title</li>
                        }
                    </ul>
                }
                @switch (vn.Status)
                {
                    case Status.Release:
                        <p><b>Статус</b>: <span class="text-success">Релиз</span></p>
                        break;
                    case Status.InDevelopment:
                        <p><b>Статус</b>: <span class="text-info">В разработке</span></p>
                        break;
                    case Status.Abandoned:
                        <p><b>Статус</b>: <span class="text-danger">Заброшено</span></p>
                        break;
                    case Status.Announced:
                        <p><b>Статус</b>: <span class="text-danger">Анонсировано</span></p>
                        break;
                }

                @if (@ViewBag.VnAverageRating == -1 || @ViewBag.VnRatingCount == -1)
                {
                    <p><b>Рейтинг</b>: 0/10 (Никто ещё не оценил эту визуальную новеллу)</p>
                }
                else
                {
                    <p><b>Рейтинг</b>: @Math.Round(ViewBag.VnAverageRating, 2)/10 (@ViewBag.VnRatingCount оценок)</p>
                }
                @if (@vn.VndbRating != null)
                {
                    <p><b>Рейтинг VNDB</b>: @vn.VndbRating/10 (@vn.VndbVoteCount)</p>
                }
                <p>
                    <b>Время чтения</b>:
                    @{
                        string readingTime = "";
                        switch (vn.ReadingTime)
                        {
                            case ReadingTime.LessTwoHours:
                                readingTime = "Меньше 2 часов";
                                break;
                            case ReadingTime.TwoToTenHours:
                                readingTime = "От 2 до 10 часов";
                                break;
                            case ReadingTime.TenToThirtyHours:
                                readingTime = "От 10 до 30 часов";
                                break;
                            case ReadingTime.ThirtyToFiftyHours:
                                readingTime = "От 30 до 50 часов";
                                break;
                            case ReadingTime.OverFiftyHours:
                                readingTime = "Больше 50 часов";
                                break;
                        }
                    }
                    @readingTime

                    @if (vn.VndbLengthInMinutes != null)
                    {
                        string convertedMinutes = "";
                        int minutes = (int)vn.VndbLengthInMinutes;

                        if (minutes < 60)
                        {
                            convertedMinutes = $"{minutes} м.";
                        }
                        else if (minutes == 60)
                        {
                            convertedMinutes = $"1 ч.";
                        }
                        else
                        {
                            int remainMinutes = minutes % 60;
                            int hours = (minutes - remainMinutes) / 60;

                            if (remainMinutes == 0)
                            {
                                convertedMinutes = $"{hours} ч.";
                            }
                            else
                            {
                                convertedMinutes = $"{hours} ч. {remainMinutes} м.";

                            }
                        }

                        if (!string.IsNullOrEmpty(convertedMinutes))
                        {
                            <span>(@convertedMinutes)</span>
                        }
                    }
                </p>

                @if (vn.Author != null && vn.Author.Count > 1)
                {
                    <p>
                        <b>Авторы</b>:
                        @for (int i = 0; i < vn.Author.Count; i++)
                        {
                            @* @if (vn.Author[i].Source != null)
                            {
                                <a target="_blank" href="@vn.Author[i].Source">@vn.Author[i].Name</a>
                            }
                            else
                            {
                                <span>@vn.Author[i].Name</span>
                            } *@
                            if (vn.Author[i].VndbId != null)
                            {
                                if (i < vn.Author.Count - 1)
                                {
                                    <a target="_blank" href="https://vndb.org/@vn.Author[i].VndbId">@vn.Author[i].Name</a><span>, </span>
                                }
                                else
                                {
                                    <a target="_blank" href="https://vndb.org/@vn.Author[i].VndbId">@vn.Author[i].Name</a>
                                }
                            }
                            else
                            {
                                if (i < vn.Author.Count - 1)
                                {
                                    <span>@vn.Author[i].Name, </span>
                                }
                                else
                                {
                                    <span>@vn.Author[i].Name</span>
                                }
                            }
                        }
                    </p>
                }
                else
                {
                    @if (vn.Author != null && vn.Author.Count > 0 && vn.Author[0].VndbId != null)
                    {
                        <p>
                            <b>Автор: </b>
                            @* @if (vn.Author[0].Source != null)
                            {
                                <span><a target="_blank" href="@vn.Author[0].Source">@vn.Author[0].Name</a></span>
                            }
                            else
                            {
                                <span>@vn.Author[0].Name</span>
                            } *@

                            @if (vn.Author[0].VndbId != null)
                            {
                                <span><a target="_blank" href="https://vndb.org/@vn.Author[0].VndbId">@vn.Author[0].Name</a></span>
                            }
                            else
                            {
                                <span>@vn.Author[0].Name</span>
                            }
                        </p>
                    }
                }

                @if (vn.Translator != null && vn.Translator.Count > 1)
                {
                    <p>
                        <b>Переводчики</b>:
                        @for (int i = 0; i < vn.Translator.Count; i++)
                        {
                            @if (vn.Translator[i].Source != null)
                            {
                                if (i < vn.Translator.Count - 1)
                                {
                                    <a target="_blank" href="@vn.Translator[i].Source">@vn.Translator[i].Name</a><span>,</span>
                                }
                                else 
                                {
                                    <a target="_blank" href="@vn.Translator[i].Source">@vn.Translator[i].Name</a>
                                }

                            }
                            else
                            {
                                if (i < vn.Translator.Count - 1)
                                {
                                    <span>@vn.Translator[i].Name</span><span>,</span>
                                }
                                else
                                {
                                    <span>@vn.Translator[i].Name</span>
                                }
                            }
                        }
                    </p>
                }
                else
                {
                    @if (vn.Translator != null && vn.Translator.Count > 0)
                    {
                        <p>
                            <b>Переводчик: </b>
                            @if (vn.Translator[0].Source != null)
                            {
                                <span><a target="_blank" href="@vn.Translator[0].Source">@vn.Translator[0].Name</a></span>
                            }
                            else
                            {
                                <span>@vn.Translator[0].Name</span>
                            }
                        </p>
                    }
                }

                @if (vn.ReleaseYear != null)
                {
                    if (vn.ReleaseMonth != null)
                    {
                        if (vn.ReleaseDay != null)
                        {
                            string value = $"{(vn.ReleaseDay > 9 ? vn.ReleaseDay : $"0{vn.ReleaseDay}")}.{(vn.ReleaseMonth > 9 ? vn.ReleaseMonth : $"0{vn.ReleaseMonth}")}.{vn.ReleaseYear}";
                            <p><b>Дата выпуска</b>: @value</p>
                        }
                        else
                        {
                            string value = $"{(vn.ReleaseMonth > 9 ? vn.ReleaseMonth : $"0{vn.ReleaseMonth}")}.{vn.ReleaseYear}";
                            <p><b>Дата выпуска</b>: @value</p>
                        }
                    }
                    else
                    {
                        <p><b>Год выпуска</b>: @vn.ReleaseYear</p>
                    }
                }
                else
                {
                    <p><b>Год выпуска</b>: Неизвестно</p>
                }

                <p><b>Добавил</b>: @vn.AddedUserName</p>
                <p>
                    <b>Языки</b>:
                    @{
                        for (int i = 0; i < vn.Languages.Count; i++)
                        {
                            if (i < vn.Languages.Count - 1)
                            {
                                            <a asp-controller="Novel" asp-action="Novels" asp-route-languages="@vn.Languages[i].Id">@vn.Languages[i].Name</a><span>,</span>
                            }
                            else
                            {
                                            <a asp-controller="Novel" asp-action="Novels" asp-route-languages="@vn.Languages[i].Id">@vn.Languages[i].Name</a>
                            }
                        }
                    }
                </p>
                <p>
                    <b>Платформы</b>:
                    @{
                        for (int i = 0; i < vn.Platforms.Count; i++)
                        {
                            if (i < vn.Platforms.Count - 1)
                            {
                                            <a asp-controller="Novel" asp-action="Novels" asp-route-platforms="@vn.Platforms[i].Id">@vn.Platforms[i].Name</a><span>,</span>
                            }
                            else
                            {
                                            <a asp-controller="Novel" asp-action="Novels" asp-route-platforms="@vn.Platforms[i].Id">@vn.Platforms[i].Name</a>
                            }
                        }
                    }
                </p>
                <p>
                    <b>Жанры</b>:
                    @{
                        for (int i = 0; i < vn.Genres.Count; i++)
                        {
                            if (i < vn.Genres.Count - 1)
                            {
                                            <a asp-controller="Novel" asp-action="Novels" asp-route-genres="@vn.Genres[i].Id">@vn.Genres[i].Name</a><span>,</span>
                            }
                            else
                            {
                                            <a asp-controller="Novel" asp-action="Novels" asp-route-genres="@vn.Genres[i].Id">@vn.Genres[i].Name</a>
                            }
                        }
                    }
                </p>

                @if (vn.RelatedNovels != null && vn.RelatedNovels.Count > 0)
                {
                    <p><b>Связанные новеллы</b>:
                    @for (int i = 0; i < vn.RelatedNovels.Count; i++)
                    {
                            if (i < vn.RelatedNovels.Count - 1)
                        {
                            <a asp-controller="Novel" asp-action="Novel" asp-route-linkName="@vn.RelatedNovels[i].RelatedVisualNovel.LinkName">@vn.RelatedNovels[i].RelatedVisualNovel.Title</a><span>,</span>
                        }
                        else
                        {
                            <a asp-controller="Novel" asp-action="Novel" asp-route-linkName="@vn.RelatedNovels[i].RelatedVisualNovel.LinkName">@vn.RelatedNovels[i].RelatedVisualNovel.Title</a>
                        }
                    }
                    </p>
                }

                @if (vn.AnimeLinks != null && vn.AnimeLinks.Count > 0)
                {
                    <p><b>Связанные аниме</b>:
                    @{
                        vn.AnimeLinks.OrderBy(link => link);
                    }
                    @for (int i = 0; i < vn.AnimeLinks.Count; i++)
                    {
                        if (i < vn.AnimeLinks.Count - 1)
                        {
                            <a href="@vn.AnimeLinks[i].Url">@vn.AnimeLinks[i].Name</a><span>,</span>
                        }
                        else
                        {
                            <a href="@vn.AnimeLinks[i].Url">@vn.AnimeLinks[i].Name</a>
                        }
                    }
                    </p>
                }

                <p><b>Дата добавления</b>: @vn.DateAdded</p>
                <p><b>Дата обновления</b>: @vn.DateUpdated</p>

                @if (vn.DownloadLinks != null && vn.DownloadLinks.Count > 0 || vn.SteamLink != null)
                {
                    <div class="accordion my-3" id="accordionDownloadLinks">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseDownloadLinks" aria-expanded="false" aria-controls="collapseDownloadLinks">
                                    Ссылки на визуальную новеллу
                                </button>
                            </h2>
                            <div id="collapseDownloadLinks" class="accordion-collapse collapse" data-bs-parent="#accordionDownloadLinks">
                                <div class="accordion-body">
                                    @if (vn.DownloadLinks != null) 
                                    {
                                        @foreach (DownloadLink link in vn.DownloadLinks.OrderBy(vn => vn.GamingPlatform.Id))
                                        {
                                            <div class="col-lg-4 col-xl-4 col-xxl-4 col-md-4 col-sm-12">
                                                @switch (link.GamingPlatform.Name)
                                                {
                                                    case "Windows":
                                                        @* <img src="~/images/windows_logo_48.png" /> *@
                                                        <p><a target="_blank" href="@link.Url">Скачать для Windows</a></p>
                                                        break;
                                                    case "Linux":
                                                        @* <img src="~/images/linux_logo_48.png" /> *@
                                                        <p><a target="_blank" href="@link.Url">Скачать для Linux</a></p>
                                                        break;
                                                    case "MacOS":
                                                        @* <img src="~/images/macOs_logo_48.png" /> *@
                                                        <p><a target="_blank" href="@link.Url">Скачать для Mac</a></p>
                                                        break;
                                                    case "Android":
                                                        @* <img src="~/images/android_logo_48.png" /> *@
                                                        <p><a target="_blank" href="@link.Url">Скачать для Android</a></p>
                                                        break;
                                                    case "iPhone":
                                                        @* <img src="~/images/iphone_logo_48.png" /> *@
                                                        <p><a target="_blank" href="@link.Url">Скачать для IPhone</a></p>
                                                        break;
                                                    case "Web":
                                                        @* <img src="~/images/web_logo_48.png" /> *@
                                                        <p><a target="_blank" href="@link.Url">Web версия</a></p>
                                                        break;
                                                }
                                            </div>
                                        }
                                    }
                                    @if (vn.SteamLink != null)
                                    {
                                        @* <img style="width: 48px; height: 48px;" src="~/images/steam_logo_48.png" /> *@
                                        <p><a target="_blank" href="@vn.SteamLink">Визуальная новелла в Steam</a></p>
                                    }
                                    @if (vn.TranslateLinkForSteam != null)
                                    {
                                        @* <img style="width: 48px; height: 48px;" src="~/images/steam_logo_48.png" /> *@
                                        <p><a target="_blank" href="@vn.TranslateLinkForSteam">Руссификатор для Steam</a></p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @* <div class="row"> *@
                @* @if (vn.Links != null)
                {
                foreach (DownloadLink link in vn.Links.OrderBy(vn => vn.GamingPlatform.Id))
                {
                <div class="col-lg-4 col-xl-4 col-xxl-4 col-md-4 col-sm-12">
                @switch (link.GamingPlatform.Name)
                {
                case "Windows":
                <img src="~/images/windows_logo_48.png" />
                <span><a target="_blank" href="@link.Url">Скачать для Windows</a></span>
                break;
                case "Linux":
                <img src="~/images/linux_logo_48.png" />
                <span><a target="_blank" href="@link.Url">Скачать для Linux</a></span>
                break;
                case "MacOS":
                <img src="~/images/macOs_logo_48.png" />
                <span><a target="_blank" href="@link.Url">Скачать для Mac</a></span>
                break;
                case "Android":
                <img src="~/images/android_logo_48.png" />
                <span><a target="_blank" href="@link.Url">Скачать для Android</a></span>
                break;
                case "iPhone":
                <img src="~/images/iphone_logo_48.png" />
                <span><a target="_blank" href="@link.Url">Скачать для IPhone</a></span>
                break;
                case "Web":
                <img src="~/images/web_logo_48.png" />
                <span><a target="_blank" href="@link.Url">Web версия</a></span>
                break;
                }
                </div>
                }
                }
                @if (vn.SteamLink != null)
                {
                <div class="col-lg-4 col-xl-4 col-xxl-4 col-md-4 col-sm-12">
                <img style="width: 48px; height: 48px;" src="~/images/steam_logo_48.png" />
                <span><a target="_blank" href="@vn.SteamLink">Визуальная новелла в Steam</a></span>
                </div>
                } *@

                @if (vn.OtherLinks != null && vn.OtherLinks.Count > 0)
                {
                    <div class="accordion my-3" id="accordionOtherLinks">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                                    Дополнительные ссылки
                                </button>
                            </h2>
                            <div id="collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionOtherLinks">
                                <div class="accordion-body">
                                    @foreach (var link in vn.OtherLinks)
                                    {
                                        <p><a target="_blank" href="@link.Url">@link.Name</a></p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @* </div> *@
            </div>
        </div>
        <div>
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description-tab-pane" type="button" role="tab" aria-controls="description-tab-pane" aria-selected="true">Описание</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="tags-tab" data-bs-toggle="tab" data-bs-target="#tags-tab-pane" type="button" onclick="loadTagsMetadata(@vn.Id, 0)" role="tab" aria-controls="tags-tab-pane" aria-selected="false">Теги</button>
                </li>
                @if (vn.SoundtrackYoutubePlaylistLink != null)
                {
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="sountrack-tab" data-bs-toggle="tab" data-bs-target="#sountrack-tab-pane" type="button" role="tab" aria-controls="soundtrag-tab-pane" aria-selected="false">Саундтрек</button>
                    </li>
                }
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="description-tab-pane" role="tabpanel" aria-labelledby="description-tab" tabindex="0">
                    <div>
                        @{
                            string description = vn.Description.Replace("\r\n","<br>"); // TODO Change on server
                        }
                        <p class="text-start p-3">@Html.Raw(description)</p>
                    </div>
                        @if (vn.ScreenshotLinks != null)
                        {
                            <div class="f-carousel" id="myCarousel">
                                @foreach (string path in vn.ScreenshotLinks)
                                {
                                    string coverImageUrl = @s3Url + path;
                                    <div data-thumb-src="@coverImageUrl" class="f-carousel__slide">
                                        <a data-fancybox="gallery" href="@coverImageUrl"><img src="@coverImageUrl" /></a>
                                    </div>
                                }
                            </div>
                        }
                </div>
                <div class="tab-pane fade" id="tags-tab-pane" role="tabpanel" aria-labelledby="tags-tab" tabindex="0">
                    <div id="spoilerLevelSelect" class="mt-2 grid-gap">
                        <button id="btnNoneSpoilerLevel" onclick="loadTagsMetadata(@vn.Id, 0)" class="btn btn-primary" disabled>Без спойлеров</button>
                        <button id="btnMinorSpoilerLevel" onclick="loadTagsMetadata(@vn.Id, 1)" class="btn btn-primary">Незначительные спойлеры</button>
                        <button id="btnMajorSpoilerLevel" onclick="loadTagsMetadata(@vn.Id, 2)" class="btn btn-danger">Все спойлеры</button>
                    </div>
                    <div class="d-flex justify-content-center mt-2" id="liveAlertPlaceholder"></div>
                    <div id="tags-column-container">
                    </div>
                </div>
                @if (vn.SoundtrackYoutubePlaylistLink != null)
                {
                    <div class="tab-pane fade" id="sountrack-tab-pane" role="tabpanel" aria-labelledby="sountrack-tab" tabindex="0">
                        <div>
                            @await Html.PartialAsync("_YoutubeIFramePartial", vn.SoundtrackYoutubePlaylistLink)
                        </div>
                    </div>
                }
            </div>
        </div>
        
    </div>
</div>

<div class="vn-page mt-3" style="background: rgba(30,30,30, 0.8)" id="comment-section">
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var url = "/Comment?visualNovelId=" + '@vn.Id';
        var xhr = new XMLHttpRequest();
        xhr.open("GET", url, true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                    document.getElementById('comment-section').innerHTML = xhr.responseText;

                    enableToggleSpoilers();
                }
            }
        };
        xhr.send();
    });
</script>

@if (currentUser != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            enableLabelsSelect('@currentUser.Id', @vn.Id);
            trackVisitor('@vn.Id');
        });

        var ratingRadioButtons = document.getElementsByClassName('rating-area')[0].querySelectorAll('input');
        var isHaveRating = @isHaveRating.ToString().ToLower()
        var deleteRatingButton = document.getElementById('delete-rating-button');

        if (deleteRatingButton) {
            deleteRatingButton.addEventListener('click', function () {
                var url = "/User/RemoveUserRating?userId=" + '@currentUser.Id' + "&visualNovelId=" + '@vn.Id';
                var xhr = new XMLHttpRequest();
                xhr.open("DELETE", url, true);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            loadToast("Рейтинг удален", true);

                            deleteRatingButton.classList.add('d-none');
                            ratingRadioButtons.forEach(function (e) {
                                e.checked = false;
                            });

                            isHaveRating = false;
                        } else {
                            loadToast("Ошибка при удалении рейтинга", false);
                        }
                    }
                };
                xhr.send();
            });
        }

        ratingRadioButtons.forEach(function (e) {
            e.addEventListener('click', function () {
                if (isHaveRating) {
                    var url = "/User/UpdateUserRating?userId=" + '@currentUser.Id' + "&visualNovelId=" + '@vn.Id' + "&rating=" + e.value;
                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", url, true);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                loadToast("Рейтинг изменен", true);
                                if (deleteRatingButton) {
                                    deleteRatingButton.classList.remove('d-none');
                                    isHaveRating = true;
                                }
                            } else {
                                loadToast("Ошибка при изменении рейтинга", false);
                            }
                        }
                    };
                    xhr.send();
                }
                else {
                    var url = "/User/AddUserRating?userId=" + '@currentUser.Id' + "&visualNovelId=" + '@vn.Id' + "&rating=" + e.value;
                    var xhr = new XMLHttpRequest();
                    xhr.open("PUT", url, true);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                loadToast("Рейтинг добавлен", true);
                                if (deleteRatingButton) {
                                    deleteRatingButton.classList.remove('d-none');
                                    isHaveRating = true;
                                }
                            } else {
                                loadToast("Ошибка при добавлении рейтинга", false);
                            }
                        }
                    };
                    xhr.send();
                }
            })
        });
    </script>
}

@*Fancybox launch*@
<script src="@fancyappsScript"></script>
<script>
    const container = document.getElementById("myCarousel");

    const options = {
        Thumbs: {
            type: "modern",
        },
        Dots: false
    };

    new Carousel(container, options, { Thumbs });

    Fancybox.bind('[data-fancybox="gallery"]', {

    });
</script>
@*Fancybox launch*@
